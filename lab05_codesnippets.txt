******** Step 48 *****************
intents[0].confidence>=0.94
That question is out of scope for this application, take a look at the Conversation Enhanced application to handle questions like these.

intents[0].confidence<0.94
Sorry I haven't learned answers to questions like this.
***********************************
******** Step 51 *****************
wget https://github.com/iic-dach/csadConversation/blob/master/resources/cardevice_entity.txt
***********************************
******** Step 55 username/passowrd version *****************
var config = { 
  watson: {
    assistant: { 
      username: "<yourServiceUsername>", 
      password: "<yourServicePassword>", 
      version: "2019-02-28",
      url: "<yourServiceUrl>",
      assistantId: "<yourAssistantId>" 
    },
    discovery: {
      version: "2019-04-30",
      username: "<your discovery username>",
      password: "<your discovery password>",
      url: "<yourServiceUrl>"
    },
    discoveryEnv: {
      collectionId: "<your collectionId>",
      environmentId: "<your environmentId>"
    } 
  } 
}; 
module.exports = config;
***********************************
******** Step 55 apikey version *****************
var config = { 
  watson: {
    assistant: { 
      iam_apikey: "<yourApiKey>", 
      version: "2019-02-28",
      url: "<yourServiceUrl>",
      workspace_id: "<yourWorkspaceId>" 
    },
    discovery: {
      version: "2019-04-30",
      iam_apikey: "<yourApiKey>",
      url: "<yourServiceUrl>"
    },
    discoveryEnv: {
      collectionId: "<your collectionId>",
      environmentId: "<your environmentId>"
    } 
  } 
}; 
module.exports = config;
***********************************
******** Step 57 *****************
const DiscoveryV1 = require('ibm-watson/discovery/v1');
***********************************
******** Step 59 *****************
const watsonDiscovery = new DiscoveryV1({
  version: config.watson.discovery.version,
  authenticator: new IamAuthenticator({
    apikey: config.watson.discovery.iam_apikey
  }),
  url: config.watson.discovery.url
});
***********************************
******** Step 60 *****************
exports.postMessage = (req, res, next) => {
  let text = '';
  if (req.body.input) {
    text = req.body.input.text;
  }
  watsonAssistant.message({
    assistantId: config.watson.assistant.assistantId,
    sessionId: assistantSessionId,
    input: {
      'message_type': 'text',
      'text': text
    }
  })
  .then(assistantResult => {
    console.log(JSON.stringify(assistantResult, null, 2));
    if (text === '') {
      return res.json(assistantResult);
    }
    console.log("Detected input: " + text);
    if (assistantResult.result.output.intents.length > 0) {
      var intent = assistantResult.result.output.intents[0];
      console.log("Detected intent: " + intent.intent);
      console.log("Confidence: " + intent.confidence);
    }
    if (assistantResult.result.output.entities.length > 0) {
      var entity = assistantResult.result.output.entities[0];
      console.log("Detected entity: " + entity.entity);
      console.log("Value: " + entity.value);
      if ((entity.entity === 'help') && (entity.value === 'time')) {
        var msg = 'The current time is ' + new Date().toLocaleTimeString();
        console.log(msg);
        assistantResult.result.output.generic[0].text = msg;
      }
      if (intent != null && intent.intent === "out_of_scope" 
              && assistantResult.result.output.entities.filter(val => val.entity === "cardevice").length > 0) {
        let discoveryParams = {
          'query': text,
          'environmentId': config.watson.discoveryEnv.environmentId,
          'collectionId': config.watson.discoveryEnv.collectionId,
          'passages': true,
          return: 'text, title, sourceUrl, passages'
        };
        watsonDiscovery.query(discoveryParams)
        .then(discoveryResult => {
          console.log(JSON.stringify(discoveryResult, null, 2));
          assistantResult.result.output.generic[0].text = discoveryResult.result.passages[0].passage_text;
          return res.json(assistantResult);
        })
        .catch(err => {
          console.log('error:', err);
        }); 
      } else {
        // console.log(JSON.stringify(result, null, 2)); 
        res.json(assistantResult);
      }
    }
  })
  .catch(err => {
    console.log(err);
  })
}
***********************************
********** Step 92 *************************
if (json.result.output.generic[0].response_type === "text") {
  updateChatLog("Watson", json.result.output.generic[0].text);
} else {
  let title = "<b>" + json.result.output.generic[0].results[0].title + "</b><br/>";
  text = title.concat(json.result.output.generic[0].results[0].body.substring(0, 50)).concat('...');
  updateChatLog("Watson", text); 
}
***********************************